{"version":3,"sources":["components/Header.jsx","components/SearchInput.jsx","components/EmojiResultsRow.jsx","components/EmojiResults.jsx","utils/filterEmoji.js","components/App.jsx","index.jsx"],"names":["Header","className","SearchInput","props","textChange","onChange","e","defaultProps","EmojiResultsRow","title","codePointHex","symbol","codePointAt","toString","src","alt","EmojiResults","emojiData","map","emoji","searchText","maxResults","emojiList","filter","keywords","toLowerCase","includes","slice","App","handleSearchChange","setState","filteredEmoji","filterEmoji","target","value","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iusKASeA,EANA,kBACb,wBAAQC,UAAU,mBAAlB,2BCAIC,G,MAAc,SAACC,GACnB,IAAQC,EAAeD,EAAfC,WAMR,OACE,qBAAKH,UAAU,yBAAf,SACE,8BACE,uBACEI,SARa,SAACC,GACpBF,EAAWE,YAkBfJ,EAAYK,aAAe,CACzBH,WAAY,MAGCF,QC1BTM,G,MAAkB,SAACL,GACvB,IAAQM,EAAkBN,EAAlBM,MACFC,EADoBP,EAAXQ,OACaC,YAAY,GAAGC,SAAS,IAC9CC,EAAG,iDAA6CJ,EAA7C,QAET,OACE,sBAAKT,UAAU,8BAAf,UACE,qBACEc,IAAKN,EACLK,IAAKA,IAEP,sBAAMb,UAAU,QAAhB,SACGQ,SAWTD,EAAgBD,aAAe,CAC7BE,MAAO,GACPE,OAAQ,IAGKH,QC3BTQ,G,MAAe,SAACb,GACpB,IAAQc,EAAcd,EAAdc,UAER,OACE,qBAAKhB,UAAU,0BAAf,SAEIgB,EAAUC,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAEER,OAAQQ,EAAMR,OACdF,MAAOU,EAAMV,OAFRU,EAAMV,cAcvBO,EAAaT,aAAe,CAC1BU,UAAW,IAGED,Q,OC7BA,WAACI,EAAYC,GAAb,OACbC,EAAUC,QAAO,YAA0B,IAAvBd,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACzB,QAAIf,EAAMgB,cAAcC,SAASN,EAAWK,kBAGxCD,EAASC,cAAcC,SAASN,EAAWK,kBAI9CE,MAAM,EAAGN,ICLOO,E,kDACnB,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAMR0B,mBAAqB,SAACvB,GACpB,EAAKwB,SAAS,CACZC,cAAeC,EAAY1B,EAAE2B,OAAOC,MAAO,OAP7C,EAAKC,MAAQ,CACXJ,cAAeC,EAAY,GAAI,KAHhB,E,0CAanB,WACE,IAAQD,EAAkBK,KAAKD,MAAvBJ,cACR,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE3B,WAAYgC,KAAKP,qBAEnB,cAAC,EAAD,CACEZ,UAAWc,W,GAvBYM,IAAMC,WCFvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8bd3617.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = () => (\n  <header className=\"component-header\">\n    Emoji Search\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchInput.css';\n\nconst SearchInput = (props) => {\n  const { textChange } = props;\n\n  const handleChange = (e) => {\n    textChange(e);\n  };\n\n  return (\n    <div className=\"component-search-input\">\n      <div>\n        <input\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nSearchInput.propTypes = {\n  textChange: PropTypes.func,\n};\n\nSearchInput.defaultProps = {\n  textChange: null,\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './EmojiResultsRow.css';\n\nconst EmojiResultsRow = (props) => {\n  const { title, symbol } = props;\n  const codePointHex = symbol.codePointAt(0).toString(16);\n  const src = `//cdn.jsdelivr.net/emojione/assets/png/${codePointHex}.png`;\n\n  return (\n    <div className=\"component-emoji-results-row\">\n      <img\n        alt={title}\n        src={src}\n      />\n      <span className=\"title\">\n        {title}\n      </span>\n    </div>\n  );\n};\n\nEmojiResultsRow.propTypes = {\n  title: PropTypes.string,\n  symbol: PropTypes.string,\n};\n\nEmojiResultsRow.defaultProps = {\n  title: '',\n  symbol: '',\n};\n\nexport default EmojiResultsRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmojiResultsRow from './EmojiResultsRow';\nimport './EmojiResults.css';\n\nconst EmojiResults = (props) => {\n  const { emojiData } = props;\n\n  return (\n    <div className=\"component-emoji-results\">\n      {\n        emojiData.map((emoji) => (\n          <EmojiResultsRow\n            key={emoji.title}\n            symbol={emoji.symbol}\n            title={emoji.title}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nEmojiResults.propTypes = {\n  emojiData: PropTypes.arrayOf,\n};\n\nEmojiResults.defaultProps = {\n  emojiData: [],\n};\n\nexport default EmojiResults;\n","import emojiList from './emojiList.json';\n\nexport default (searchText, maxResults) => (\n  emojiList.filter(({ title, keywords }) => {\n    if (title.toLowerCase().includes(searchText.toLowerCase())) {\n      return true;\n    }\n    if (keywords.toLowerCase().includes(searchText.toLowerCase())) {\n      return true;\n    }\n    return false;\n  }).slice(0, maxResults)\n);\n","import React from 'react';\nimport Header from './Header';\nimport SearchInput from './SearchInput';\nimport EmojiResults from './EmojiResults';\nimport filterEmoji from '../utils/filterEmoji';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji('', 10),\n    };\n  }\n\n  handleSearchChange = (e) => {\n    this.setState({\n      filteredEmoji: filterEmoji(e.target.value, 10),\n    });\n  };\n\n  render() {\n    const { filteredEmoji } = this.state;\n    return (\n      <div>\n        <Header />\n        <SearchInput\n          textChange={this.handleSearchChange}\n        />\n        <EmojiResults\n          emojiData={filteredEmoji}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}